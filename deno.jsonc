{
  "name": "@o-industrial/open-industrial-web-runtime",
  "version": "0.0.0",
  "exports": {
    ".": "./main.ts",
    "./dev": "./dev.ts"
  },
  "license": "MIT",
  "tasks": {
    "build": "deno task build:fmt && deno task build:lint && deno task publish:check && deno task test",
    "build:dev": "deno run -A dev.ts build",
    "build:docker": "docker build --no-cache -t open-industrial-web-runtime -f DOCKERFILE .",
    "build:fmt": "deno fmt",
    "build:lint": "deno lint",
    "build:main": "deno run -A main.ts build",
    "check": "deno fmt --check && deno lint && deno check **/*.ts && deno check **/*.tsx",
    "clean:docker": "docker stop open-industrial-web-runtime || true && docker rm open-industrial-web-runtime || true",
    "deploy": "npx rimraf cov && deno task build && deno task test && npx ftm git",
    "deploy:docker": "docker run --name open-industrial-web-runtime --network oi-runtimes --env-file .env.docker -dp 127.0.0.1:5411:5411 open-industrial-web-runtime",
    "dev": "deno run --config ./deno.jsonc -A --watch=apps/,configs/,data/,routes/,src/,static/ dev.ts",
    "network:docker": "docker network create oi-runtimes || true",
    "publish:check": "deno publish --dry-run --allow-dirty",
    "refresh:docker": "npx rimraf cov && deno task build:docker && deno task network:docker && deno task clean:docker && deno task deploy:docker",
    "start": "deno run -A main.ts",
    "test": "npx rimraf cov && deno test -A tests/tests.ts --coverage=cov",
    "version": "deno run -A jsr:@fathym/common@0/build/version"
  },
  "imports": {
    "@fathym/atomic": "jsr:@fathym/atomic@0",
    "@fathym/atomic-design-kit": "jsr:@fathym/atomic-design-kit@0",
    "@fathym/atomic-icons": "jsr:@fathym/atomic-icons@0.0.94",
    "@fathym/common": "jsr:@fathym/common@0.2.265",
    "@fathym/eac": "jsr:@fathym/eac@0.2.113",
    "@fathym/eac-applications": "jsr:@fathym/eac-applications@0.0.157",
    "@fathym/eac-deno-kv": "jsr:@fathym/eac-deno-kv@0.0.19",
    "@fathym/eac-identity": "jsr:@fathym/eac-identity@0.0.18",
    "@fathym/eac-licensing": "jsr:@fathym/eac-licensing@0.0.40",
    // "@fathym/eac-licensing/steward/plugins": "../../fathym-deno/eac-licensing/src/steward/plugins/.exports.ts",
    "@fathym/ioc": "jsr:@fathym/ioc@0.0.14",
    "immer": "npm:immer@10.1.1",
    "json-schema": "npm:json-schema@0.4.0",

    "@o-industrial/common": "jsr:@o-industrial/common@0.0.180",
    // "@o-industrial/common/atomic/atoms": "../open-industrial-reference-architecture/atomic/atoms/.exports.ts",
    // "@o-industrial/common/atomic/molecules": "../open-industrial-reference-architecture/atomic/molecules/.exports.ts",
    // "@o-industrial/common/atomic/organisms": "../open-industrial-reference-architecture/atomic/organisms/.exports.ts",
    // "@o-industrial/common/atomic/templates": "../open-industrial-reference-architecture/atomic/templates/.exports.ts",
    // "@o-industrial/common/atomic/utils": "../open-industrial-reference-architecture/atomic/utils/.exports.ts",
    // "@o-industrial/common/atomic/icons": "../open-industrial-reference-architecture/build/iconset/icons/.exports.ts",

    // "@o-industrial/common/api": "../open-industrial-reference-architecture/src/api/.exports.ts",
    // "@o-industrial/common/eac": "../open-industrial-reference-architecture/src/eac/.exports.ts",
    // "@o-industrial/common/secrets": "../open-industrial-reference-architecture/src/secrets/.exports.ts",
    // "@o-industrial/common/sop": "../open-industrial-reference-architecture/src/sop/.exports.ts",
    // "@o-industrial/common/types": "../open-industrial-reference-architecture/src/types/.exports.ts",
    // "@o-industrial/common/utils": "../open-industrial-reference-architecture/src/utils/.exports.ts",

    // "@o-industrial/common/flow": "../open-industrial-reference-architecture/src/flow/.exports.ts",

    // "@o-industrial/common/fluent": "../open-industrial-reference-architecture/src/fluent/_/.exports.ts",
    // "@o-industrial/common/fluent/connections": "../open-industrial-reference-architecture/src/fluent/connections/.exports.ts",
    // "@o-industrial/common/fluent/packs": "../open-industrial-reference-architecture/src/fluent/packs/.exports.ts",
    // "@o-industrial/common/fluent/simulators": "../open-industrial-reference-architecture/src/fluent/simulators/.exports.ts",
    // "@o-industrial/common/fluent/steps": "../open-industrial-reference-architecture/src/fluent/steps/.exports.ts",
    // "@o-industrial/common/fluent/types": "../open-industrial-reference-architecture/src/fluent/types/.exports.ts",
    // "@o-industrial/common/fluent/utils": "../open-industrial-reference-architecture/src/fluent/utils/.exports.ts",
    // "@o-industrial/common/fluent/workspaces": "../open-industrial-reference-architecture/src/fluent/workspaces/.exports.ts",

    // "@o-industrial/common/packs/azure-iot": "../open-industrial-reference-architecture/src/packs/azure-iot/.pack.ts",
    // "@o-industrial/common/packs/oi-core": "../open-industrial-reference-architecture/src/packs/oi-core/.pack.ts",

    // "@o-industrial/common/runtimes": "../open-industrial-reference-architecture/src/runtimes/.exports.ts",

    "pdfjs-dist": "npm:pdfjs-dist@5.2.133",
    "pnpapi": "npm:pnpapi@0.0.0",
    "preact": "npm:preact@10.20.1",
    "react": "npm:preact@10.20.1/compat",
    "react-dom": "npm:preact@10.20.1/compat",
    "react/jsx-runtime": "npm:preact@10.20.1/jsx-runtime",
    "react/jsx-dev-runtime": "npm:preact@10.20.1/jsx-dev-runtime",
    "reactflow": "npm:reactflow@11.11.4",
    "recharts": "npm:recharts@2.15.3",
    "@std/assert": "jsr:@std/assert@1.0.6",
    "@std/log": "jsr:@std/log@0.224.6",
    "tailwindcss": "npm:tailwindcss@3.4.1",
    "tailwindcss/": "npm:/tailwindcss@3.4.1/",
    "tailwindcss/plugin": "npm:/tailwindcss@3.4.1/plugin.js",
    "tailwind-scrollbar": "npm:tailwind-scrollbar@4.0.2",
    "@tailwindcss/typography": "npm:@tailwindcss/typography@0.5.16",
    "tailwindcss/unimportant": "npm:tailwindcss-unimportant@2.1.1",
    "zod": "npm:zod@3.23.8",

    "$mdx/writing-devices": "./scripts/writing-devices.ts"
  },
  "exclude": [
    "**/_eac-runtime/*",
    "!src/**/.exports.ts",
    "!dev.ts",
    "!main.ts",
    "!mod.ts",
    "!configs/*"
  ],
  "lint": {
    "include": ["apps/", "configs/", "src/", "tests/"],
    "exclude": [],
    "rules": {
      "tags": ["recommended"],
      "include": ["ban-untagged-todo"],
      "exclude": []
    }
  },
  "fmt": {
    "include": ["apps/", "configs/", "src/", "tests/"],
    "exclude": [],
    "indentWidth": 2,
    "lineWidth": 100,
    "proseWrap": "preserve",
    "semiColons": true,
    "singleQuote": true,
    "useTabs": false
  },
  "unstable": ["kv"],
  "lock": false,
  "compilerOptions": {
    "jsx": "react-jsx",
    "jsxImportSource": "preact"
  }
}
